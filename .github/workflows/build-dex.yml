name: Build ZipUtil.java to DEX

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Pegar o código do repositório
    - name: Checkout repo
      uses: actions/checkout@v3

    # 2️⃣ Instalar Java 8
    - name: Set up Java 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    # 3️⃣ Compilar o Java
    - name: Compile ZipUtil.java
      run: javac -source 1.8 -target 1.8 ZipUtil.java

    # 4️⃣ Instalar Android SDK e Build Tools (para d8)
    - name: Install Android SDK and Build Tools
      run: |
        sudo apt update
        sudo apt install -y wget unzip
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip
        rm cmdline-tools.zip
        mkdir -p latest
        mv cmdline-tools/* latest/
        yes | latest/bin/sdkmanager --sdk_root=$HOME/android-sdk "build-tools;33.0.2"
        export PATH=$HOME/android-sdk/build-tools/33.0.2:$PATH
        d8 --version

    # 5️⃣ Converter .class para .dex
    - name: Convert class to DEX
      run: |
        export PATH=$HOME/android-sdk/build-tools/33.0.2:$PATH
        mkdir -p dex_output
        d8 --min-api 21 --output=dex_output ZipUtil.class

    # 6️⃣ Upload do .dex como artefato
    - name: Upload classes.dex
      uses: actions/upload-artifact@v4
      with:
        name: ziputil-dex
        path: ./dex_output/classes.dex
